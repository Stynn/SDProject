package utils;

import java.awt.Image;
import java.awt.image.BufferedImage;
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.util.zip.ZipEntry;
import java.util.zip.ZipInputStream;
import java.util.zip.ZipOutputStream;

import javax.imageio.ImageIO;
import javax.swing.ImageIcon;

/**
 * Class use to compress and decompress the image before and after the network
 */
public class ImageManipulator {
	
	/**
	 * Create a image on the disk
	 * @param image The image to create on the disk
	 */
	public static void createImageOnDisk(BufferedImage image){
		try {
		    File outputfile = new File("tmpE.jpeg");
		    ImageIO.write(image, "jpeg", outputfile);
		} catch (IOException e) {
		    e.printStackTrace();
		}
	}
	
	/**
	 * Retrieve a image from the disk
	 * @return The bufferedImage mirror of the image from the disk
	 */
	public static BufferedImage retrieveImageFromDisk(){
		BufferedImage res = null;
		try {
			res = ImageIO.read(new File("tmpR.jpeg"));
		} catch (IOException e) {
			e.printStackTrace();
		}
		return res;
	}
}

package vw;

import java.awt.Dimension;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.GroupLayout;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

import ctrl.AddressIPGetter;
import laf.Button;
import laf.Label;
import laf.ShowDialog;
import laf.TextField;

/**
 * Connection frame for the supervised
 */
public class ConnectForm extends JFrame{

	//TextEdits of the frame
	TextField ipTxt;
	TextField portTxt;
	
	/**
	 * Serial version UID
	 */
	private static final long serialVersionUID = -1788127507858417887L;

	/**
	 * COnstrcutor of the connection frame
	 */
	public ConnectForm(){
		/**** Attributes ****/
		//The main layout manager
		GroupLayout layout;
		
		//Main panel of the frame
		JPanel mainPanel = null;
		
		//The panel of the button
		JPanel subPanel = null;
		
		//Labels of the frame 'IP Adress' 'Port'
		Label ipLbl;
		Label portLbl;
		
		//Button 'connect'
		Button connect = new Button("Connect");
		
		/**** Actions ****/
		
		connect.addActionListener(new ActionListener() {
			
			@Override
			public void actionPerformed(ActionEvent e) {
				connect();
			}
		});
		
		/**** Construction ****/
		//Labels
		ipLbl = new Label("IP Adress :");
		ipLbl.setMinimumSize(new Dimension(200, 33));
		portLbl = new Label("Port :");
		
		//EditTexts
		ipTxt = new TextField();
		portTxt = new TextField();
		
		//Button
		connect.setMinimumSize(new Dimension(100,33));
		

		
		//Panel and layout construction
		mainPanel = new JPanel();
		subPanel = new JPanel(new GridBagLayout());
		subPanel.add(connect);
		
		layout = new GroupLayout(mainPanel);
		
		layout.setAutoCreateGaps(true);
		layout.setAutoCreateContainerGaps(true);
		
		mainPanel.setLayout(layout);
		
		layout.setHorizontalGroup(
		   layout.createSequentialGroup()
		   .addGroup(layout.createParallelGroup()
			   .addComponent(ipLbl)
			   .addComponent(ipTxt)
			   .addComponent(portLbl)
			   .addComponent(portTxt)
			   .addComponent(subPanel))
			   
		);
		layout.setVerticalGroup(
		   layout.createSequentialGroup()
	           .addComponent(ipLbl)
	           .addComponent(ipTxt)
	           .addComponent(portLbl)
	           .addComponent(portTxt)
	           .addComponent(subPanel)
		);
		
		
		//Frame construction
		this.add(mainPanel);
		this.pack();
		this.setTitle("Viewer : connect");
		this.setResizable(false);
		this.setVisible(true);
	}
	
	/**
	 * Method of connection of the frame, called by clicking on the button 'connect'
	 */
	private void connect(){
		//Check fields enter by the client
		/*
		 * Si l'adresse ip et le port sont ok on passe à la suite
		 * Sinon on passe pas à la suite -> message que ça ne va pas du tout il faut remplir correcte les champs 
		 */
		Boolean ok = true;
		
		if (!AddressIPGetter.isValidIp(this.ipTxt.getText())){
			ShowDialog s = new ShowDialog("The ip address is invalid, please retry.");
			ok = false;
		}
		if (!AddressIPGetter.isValidPort(portTxt.getText())){
			ShowDialog s = new ShowDialog("The port is invalid, please retry.");
			ok = false;
		}
		
		if (ok){
			//Connexion
			JOptionPane.showMessageDialog(null, "IP : A.B.C.D\nPort : xxxx", "Connection informations", JOptionPane.INFORMATION_MESSAGE);
		}
		
	}
	
}

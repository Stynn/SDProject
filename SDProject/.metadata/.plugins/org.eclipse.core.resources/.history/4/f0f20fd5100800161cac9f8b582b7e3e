package ctrl;

import java.awt.AWTException;
import java.awt.Dimension;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.image.BufferedImage;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.Socket;
import java.net.UnknownHostException;
import lipermi.net.Client;
import test.Transmitter;
import utils.ImageManipulator;

/**
 * This class is the routine lvl 1, send images (and parameters)
 */
public class ClientRoutineLevel1 extends Thread{
	
	private String clientName = "";	//This is the name of the client
	private Client client = null;
	
	/**
	 * Constructor of the routine
	 * @param client
	 * @param name
	 */
	public ClientRoutineLevel1(Client client, String name){
		this.client = client;
		this.clientName = name;
	}
	
	/**
	 * Routine
	 */
	public void run(){
		Boolean isActive = true;

		//TODO voir ici qu'est ce qu'il faut v√©ritablement envoyer au serveur
		Dimension dimension = java.awt.Toolkit.getDefaultToolkit().getScreenSize();
		int height = (int)dimension.getHeight();
		int width  = (int)dimension.getWidth();
		
		//Take a screeshot to send
		Rectangle screenRect = new Rectangle(0,0,width,height);
		Robot robot = null;
		try {
			robot = new Robot();
		} catch (AWTException e1) {
			e1.printStackTrace();
		}
		
		
		
		Socket sock = null;
		while(isActive){
			
			//Retrieving the remote service
			RoutineServices routineServicesRemote;
			routineServicesRemote = (RoutineServices) this.client.getGlobal(RoutineServices.class);
			
			
			if (routineServicesRemote.amIActive(clientName)){
				isActive = true;
				//Every 50 ms check if we are active and send a image
				try {
					Thread.sleep(50);
				} catch (InterruptedException e) {
					e.printStackTrace();
				}
				
				//Open a socket towards the server
				//TODO faire la socket plus automatique
				try {
					sock = new Socket("77.150.66.35", 5001);
				} catch (UnknownHostException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
				
				System.out.println("										CLIENT<"+clientName+"> Sending frame ...");
				BufferedImage img = robot.createScreenCapture(screenRect);
				
				//Creation of the image on disk
				ImageManipulator.createImageOnDisk(img);
				
				//Sending sending image by socket
				try {
					Transmitter.transmit(new FileInputStream("tmpE.jpeg"), sock.getOutputStream(), true);
				} catch (FileNotFoundException e) {
					// TODO Auto-generated catch block
					//e.printStackTrace();
				} catch (IOException e) {
					// TODO Auto-generated catch block
					//e.printStackTrace();
				}
				
				//TODO Wainting ack from server
				
				//TODO here or somewhere else : Sending parameters to the server
				
			}
		}
	}
}
